1.开发文档地址:http://xxxxx.gzyxxy.com/swagger/index.html
2.下载热更新
地址 https://github.com/ha-ni-cc/hyperf-watch
wget -O watch https://raw.githubusercontent.com/ha-ni-cc/hyperf-watch/master/watch
3.git钩子配置

一、/.git/config文件修改：
https://tao1442605868:taotao0627@code.aliyun.com/xundong/xxxx.git

二、批量修改shell脚本dos->unix方法:
sudo dos2unix pull.sh fg_cp.sh fg_clone.sh

三、钩子配置
后端webhooks配置:http://xxxx.gzyxxy.com/githook/wp-git.php
前端前台webhooks配置:http://xxxx.gzyxxy.com/githook/wp-git.php?domain=dist
前端后台webhooks配置:http://xxxx.gzyxxy.com/githook/wp-git.php?domain=back

4.nginx配置
server {
    listen       80;
    server_name xxxx.gzyxxy.com;
    root /www/wwwroot/xxxx.gzyxxy.com;
    include enable-php-74.conf;
    #配置网站
    location / {
	proxy_set_header Host $http_host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_pass http://127.0.0.1:9702;
	index  index.html index.htm index.php;
    }
    #配置websocket
    location /ws/ {
      	proxy_http_version 1.1;
        	proxy_set_header Upgrade websocket;
            proxy_pass http://127.0.0.1:9703;
            proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header Host $host;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header Connection "upgrade";
        	rewrite /ws/(.*) /$1 break;
        	proxy_redirect off;
    }
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }
}
5.守护进程
yum install -y epel-release
yum install -y supervisor
cp /etc/supervisord.conf /etc/supervisord.d/supervisord.conf
配置文件
supervisord -c /etc/supervisord.d/supervisord.conf
vi /etc/supervisord.d/supervisord.conf

-------------------------------------------supervisord.conf-----------------------------------------------------------------------
最底部添加以下：

# 新建一个应用并设置一个名称，这里设置为 hyperf
[program:hyperf]
# 设置命令在指定的目录内执行
directory=/var/www/hyperf/
# 这里为您要管理的项目的启动命令
command=php ./bin/hyperf.php start

# 以哪个用户来运行该进程
user=root
# supervisor 启动时自动该应用
autostart=true
# 进程退出后自动重启进程
autorestart=true
# 进程持续运行多久才认为是启动成功
startsecs=1
# 重试次数
startretries=3
# stderr 日志输出位置
stderr_logfile=/var/www/hyperf/runtime/stderr.log
# stdout 日志输出位置
stdout_logfile=/var/www/hyperf/runtime/stdout.log
-------------------------------------------supervisord.conf-----------------------------------------------------------------------

# 启动 hyperf 应用
supervisorctl start hyperf
# 重启 hyperf 应用
supervisorctl restart hyperf
# 停止 hyperf 应用
supervisorctl stop hyperf
# 查看所有被管理项目运行状态
supervisorctl status
# 重新加载配置文件
supervisorctl update
# 重新启动所有程序
supervisorctl reload